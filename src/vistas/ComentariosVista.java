/*
 * 
 * 
 */
package vistas;

import controladoras.ComentariosData;
import controladoras.MiembroData;
import controladoras.TareaData;
import entidades.Comentarios;
import entidades.Miembro;
import entidades.Tarea;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import static vistas.MenuVista.escritorio;

/**
 *
 * @author Marcel
 */
public class ComentariosVista extends javax.swing.JInternalFrame {
    DefaultTableModel modelo = new DefaultTableModel();
    Tarea tareaProyecto;

    public boolean isCellEditable(int row, int column) {
        return false;
    }
        
    public ComentariosVista(Tarea tarea){
        initComponents();
        tareaProyecto= tarea;
        armarTabla();
        jbtnModifComent.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaComents = new javax.swing.JTable();
        jbtnSalir = new javax.swing.JButton();
        jbtnModifComent = new javax.swing.JButton();
        jbtnNuevoComent = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COMENTARIOS");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setInheritsPopupMenu(false);

        jTablaComents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Num Coment", "Miembro", "Fecha", "Comentario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablaComents.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTablaComents.setRowHeight(25);
        jScrollPane1.setViewportView(jTablaComents);
        if (jTablaComents.getColumnModel().getColumnCount() > 0) {
            jTablaComents.getColumnModel().getColumn(0).setMinWidth(10);
            jTablaComents.getColumnModel().getColumn(0).setMaxWidth(100);
            jTablaComents.getColumnModel().getColumn(1).setMinWidth(100);
            jTablaComents.getColumnModel().getColumn(1).setMaxWidth(150);
            jTablaComents.getColumnModel().getColumn(2).setMinWidth(100);
            jTablaComents.getColumnModel().getColumn(2).setMaxWidth(150);
            jTablaComents.getColumnModel().getColumn(3).setMinWidth(150);
            jTablaComents.getColumnModel().getColumn(3).setMaxWidth(350);
        }

        jbtnSalir.setText("Salir");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });

        jbtnModifComent.setText("Modificar Comentario");
        jbtnModifComent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnModifComentActionPerformed(evt);
            }
        });

        jbtnNuevoComent.setText("Nuevo Comentario");
        jbtnNuevoComent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNuevoComentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jbtnNuevoComent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnModifComent)
                .addGap(81, 81, 81)
                .addComponent(jbtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSalir)
                    .addComponent(jbtnModifComent)
                    .addComponent(jbtnNuevoComent))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNuevoComentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNuevoComentActionPerformed
        Comentarios comentVacio = new Comentarios();
        comentVacio.setTarea(tareaProyecto);
        ModificarComentario modifComent =new ModificarComentario(comentVacio);
        modifComent.setVisible(true);        
        escritorio.add(modifComent);
        escritorio.moveToFront(modifComent);         
    }//GEN-LAST:event_jbtnNuevoComentActionPerformed

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbtnSalirActionPerformed

    private void jbtnModifComentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnModifComentActionPerformed
        
        if (jTablaComents.getSelectedRow()!=-1){
            Comentarios coment=new Comentarios();
            coment.setComentario((String)modelo.getValueAt(jTablaComents.getSelectedRow(),3));
            coment.setFechaAvance((LocalDate) modelo.getValueAt(jTablaComents.getSelectedRow(),2));
            coment.setIdComentario((int) modelo.getValueAt(jTablaComents.getSelectedRow(),0));
            coment.setTarea(tareaProyecto);
            ModificarComentario modifComent =new ModificarComentario(coment);
            modifComent.setVisible(true);        
            escritorio.add(modifComent);
            escritorio.moveToFront(modifComent);
        }
    }//GEN-LAST:event_jbtnModifComentActionPerformed

    public void armarTabla(){
        modelo = (DefaultTableModel) jTablaComents.getModel();
        modelo.setRowCount(0);
        ComentariosData cd = new ComentariosData();
        MiembroData md = new MiembroData();
        Miembro miembro;
              
        for (Comentarios comentList: cd.listarComentariosXTarea(tareaProyecto)) {
                miembro= md.buscarMiembroPorId(tareaProyecto.getMiembroEq().getMiembro().getIdMiembro());
                modelo.addRow(new Object[]{comentList.getIdComentario(),miembro.getNombre(),comentList.getFechaAvance(), comentList.getComentario()});
            }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaComents;
    private javax.swing.JButton jbtnModifComent;
    private javax.swing.JButton jbtnNuevoComent;
    private javax.swing.JButton jbtnSalir;
    // End of variables declaration//GEN-END:variables
}
